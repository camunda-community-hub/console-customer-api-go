{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "AssignableOrganizationRoleType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/OrganizationRole.ADMIN"
          },
          {
            "$ref": "#/components/schemas/OrganizationRole.OPERATIONS_ENGINEER"
          },
          {
            "$ref": "#/components/schemas/OrganizationRole.TASK_USER"
          },
          {
            "$ref": "#/components/schemas/OrganizationRole.ANALYST"
          },
          {
            "$ref": "#/components/schemas/OrganizationRole.DEVELOPER"
          },
          {
            "$ref": "#/components/schemas/OrganizationRole.VISITOR"
          }
        ]
      },
      "Cluster": {
        "additionalProperties": false,
        "description": "Describing a Camunda cluster running in your organization. For reference, use the UUID.",
        "properties": {
          "channel": {
            "description": "The software channel your cluster is running on.",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "uuid"
            ],
            "type": "object"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "generation": {
            "description": "The version of Camunda running on your cluster.",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "uuid"
            ],
            "type": "object"
          },
          "ipwhitelist": {
            "description": "the IP Whitelist rules for your cluster - will only be returned if your organization has the feature enabled and the client you are using has the permission to see it.",
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "ip"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "links": {
            "description": "Endpoints for the components running in your Camunda cluster.",
            "properties": {
              "connectors": {
                "type": "string"
              },
              "console": {
                "type": "string"
              },
              "oauth": {
                "type": "string"
              },
              "operate": {
                "type": "string"
              },
              "optimize": {
                "type": "string"
              },
              "tasklist": {
                "type": "string"
              },
              "zeebe": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "planType": {
            "description": "Also called `ClusterPlanType`, this describes the hardware used to run your Camunda cluster.",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "uuid"
            ],
            "type": "object"
          },
          "region": {
            "description": "The data center where your Camunda cluster is running.",
            "properties": {
              "name": {
                "type": "string"
              },
              "uuid": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "uuid"
            ],
            "type": "object"
          },
          "status": {
            "description": "A health indicator for your Camunda cluster. Each of the components have their own state. The combined state is in the field `ready`.",
            "properties": {
              "operateStatus": {
                "$ref": "#/components/schemas/ClusterHealthStatus"
              },
              "optimizeStatus": {
                "$ref": "#/components/schemas/ClusterHealthStatus"
              },
              "ready": {
                "$ref": "#/components/schemas/ClusterHealthStatus"
              },
              "tasklistStatus": {
                "$ref": "#/components/schemas/ClusterHealthStatus"
              },
              "zeebeStatus": {
                "$ref": "#/components/schemas/ClusterHealthStatus"
              }
            },
            "required": [
              "ready"
            ],
            "type": "object"
          },
          "uuid": {
            "description": "The ID used in all further API operations referencing your cluster.",
            "type": "string"
          }
        },
        "required": [
          "uuid",
          "name",
          "ownerId",
          "created",
          "planType",
          "region",
          "generation",
          "channel",
          "status",
          "links"
        ],
        "type": "object"
      },
      "ClusterClient": {
        "additionalProperties": false,
        "properties": {
          "clientId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "Zeebe",
                "Operate",
                "Tasklist",
                "Optimize"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "clientId",
          "permissions"
        ],
        "type": "object"
      },
      "ClusterClientConnectionDetails": {
        "additionalProperties": false,
        "properties": {
          "ZEEBE_ADDRESS": {
            "type": "string"
          },
          "ZEEBE_AUTHORIZATION_SERVER_URL": {
            "type": "string"
          },
          "ZEEBE_CLIENT_ID": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "ZEEBE_ADDRESS",
          "ZEEBE_CLIENT_ID",
          "ZEEBE_AUTHORIZATION_SERVER_URL"
        ],
        "type": "object"
      },
      "ClusterHealthStatus": {
        "enum": [
          "Healthy",
          "Unhealthy",
          "Creating",
          "Updating"
        ],
        "type": "string"
      },
      "ClusterSecrets": {
        "additionalProperties": {
          "type": "string"
        },
        "properties": {},
        "type": "object"
      },
      "CreateClusterBody": {
        "additionalProperties": false,
        "description": "Used to create a cluster through this API. All necessary values can be retrieved from the <pre>/clusters/parameters</pre> endpoint.",
        "properties": {
          "channelId": {
            "description": "The channel (software spec) to use.",
            "type": "string"
          },
          "generationId": {
            "description": "The generation (software version) to use.",
            "type": "string"
          },
          "name": {
            "description": "The name of your new cluster.",
            "type": "string"
          },
          "planTypeId": {
            "description": "The planType (hardware spec) to use.",
            "type": "string"
          },
          "regionId": {
            "description": "The data center to use.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "planTypeId",
          "channelId",
          "generationId",
          "regionId"
        ],
        "type": "object"
      },
      "CreateClusterClientBody": {
        "additionalProperties": false,
        "properties": {
          "clientName": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "enum": [
                "Zeebe",
                "Operate",
                "Tasklist",
                "Optimize"
              ],
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "clientName"
        ],
        "type": "object"
      },
      "CreateSecretBody": {
        "additionalProperties": false,
        "properties": {
          "secretName": {
            "type": "string"
          },
          "secretValue": {
            "type": "string"
          }
        },
        "required": [
          "secretName",
          "secretValue"
        ],
        "type": "object"
      },
      "CreatedClusterClient": {
        "additionalProperties": false,
        "properties": {
          "clientId": {
            "type": "string"
          },
          "clientSecret": {
            "type": "string"
          },
          "links": {
            "properties": {
              "connectors": {
                "type": "string"
              },
              "console": {
                "type": "string"
              },
              "oauth": {
                "type": "string"
              },
              "operate": {
                "type": "string"
              },
              "optimize": {
                "type": "string"
              },
              "tasklist": {
                "type": "string"
              },
              "zeebe": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "uuid": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "uuid",
          "clientId",
          "clientSecret",
          "permissions"
        ],
        "type": "object"
      },
      "IpWhiteListBody": {
        "additionalProperties": false,
        "properties": {
          "ipwhitelist": {
            "items": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "ip": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "ip"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "ipwhitelist"
        ],
        "type": "object"
      },
      "Member": {
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string"
          },
          "invitePending": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/OrganizationRole"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "email",
          "roles",
          "invitePending"
        ],
        "type": "object"
      },
      "OrganizationRole": {
        "enum": [
          "member",
          "admin",
          "owner",
          "supportagent",
          "operationsengineer",
          "taskuser",
          "analyst",
          "developer",
          "visitor"
        ],
        "type": "string"
      },
      "OrganizationRole.ADMIN": {
        "enum": [
          "admin"
        ],
        "type": "string"
      },
      "OrganizationRole.ANALYST": {
        "enum": [
          "analyst"
        ],
        "type": "string"
      },
      "OrganizationRole.DEVELOPER": {
        "enum": [
          "developer"
        ],
        "type": "string"
      },
      "OrganizationRole.OPERATIONS_ENGINEER": {
        "enum": [
          "operationsengineer"
        ],
        "type": "string"
      },
      "OrganizationRole.TASK_USER": {
        "enum": [
          "taskuser"
        ],
        "type": "string"
      },
      "OrganizationRole.VISITOR": {
        "enum": [
          "visitor"
        ],
        "type": "string"
      },
      "Parameters": {
        "additionalProperties": false,
        "description": "Describes the different options to create a Camunda cluster.",
        "properties": {
          "channels": {
            "items": {
              "properties": {
                "allowedGenerations": {
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "uuid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "uuid"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "defaultGeneration": {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "uuid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "uuid"
                  ],
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "uuid": {
                  "type": "string"
                }
              },
              "required": [
                "allowedGenerations",
                "defaultGeneration",
                "name",
                "uuid"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "clusterPlanTypes": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "uuid": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "uuid"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "regions": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "uuid": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "uuid"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "channels",
          "clusterPlanTypes",
          "regions"
        ],
        "type": "object"
      },
      "PostMemberBody": {
        "additionalProperties": false,
        "properties": {
          "orgRoles": {
            "items": {
              "$ref": "#/components/schemas/AssignableOrganizationRoleType"
            },
            "type": "array"
          }
        },
        "required": [
          "orgRoles"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearer": {
        "bearerFormat": "JWT",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {},
    "description": "Manage Camunda Clusters and API Clients via API.",
    "license": {
      "name": " ",
      "url": ""
    },
    "title": "Camunda Management API",
    "version": "1.3.3"
  },
  "openapi": "3.0.0",
  "paths": {
    "/clusters": {
      "get": {
        "operationId": "GetClusters",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Cluster"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of all your Camunda clusters."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "operationId": "CreateCluster",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "clusterId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "clusterId"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "The clusterUuid of your new cluster."
          },
          "400": {
            "description": "Name is too long, invalid clusterPlanType, invalid region, no reservations left, invalid channel, or invalid generation"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/parameters": {
      "get": {
        "description": "Gets all possible options to create a Camunda cluster.",
        "operationId": "GetParameters",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Parameters"
                }
              }
            },
            "description": "Ok"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}": {
      "delete": {
        "description": "Irreversibly deletes a cluster identified by the given clusterUuid.",
        "operationId": "DeleteCluster",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      },
      "get": {
        "operationId": "GetCluster",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cluster"
                }
              }
            },
            "description": "Detailed information for the given clusterUuid."
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}/clients": {
      "get": {
        "operationId": "GetClients",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ClusterClient"
                  },
                  "type": "array"
                }
              }
            },
            "description": "A list of all the clients currently configured for your Camunda cluster."
          },
          "403": {
            "description": "Cluster is not yours"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "operationId": "CreateClient",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterClientBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedClusterClient"
                }
              }
            },
            "description": "Ok"
          },
          "400": {
            "description": "Client names must be unique"
          },
          "403": {
            "description": "Maximum number of clients reached or cluster is not yours"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}/clients/{clientId}": {
      "delete": {
        "description": "Irreversibly deletes a cluster client.",
        "operationId": "DeleteClient",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Cluster is not yours"
          },
          "404": {
            "description": "Cluster or client not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      },
      "get": {
        "operationId": "GetClient",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterClientConnectionDetails"
                }
              }
            },
            "description": "The connection parameters needed to use the client with your Camunda cluster."
          },
          "403": {
            "description": "Cluster is not yours"
          },
          "404": {
            "description": "Cluster or client not found"
          },
          "412": {
            "description": "The cluster is not ready; try again later"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}/ipwhitelist": {
      "put": {
        "description": "Updates the IP Whitelist rules for your cluster.",
        "operationId": "UpdateIpWhitelist",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IpWhiteListBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}/secrets": {
      "get": {
        "operationId": "GetSecrets",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterSecrets"
                }
              }
            },
            "description": "A list of all the secrets currently configured for your Camunda cluster."
          },
          "403": {
            "description": "Cluster is not yours"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      },
      "post": {
        "description": "Creates a new secret",
        "operationId": "CreateSecret",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecretBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Secret name must be less than 50 characters"
          },
          "403": {
            "description": "Maximum number of secret reached or cluster is not yours"
          },
          "404": {
            "description": "Cluster not found"
          },
          "409": {
            "description": "Secret names must be unique"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/clusters/{clusterUuid}/secrets/{secretName}": {
      "delete": {
        "description": "Irreversibly deletes a secret",
        "operationId": "DeleteSecret",
        "parameters": [
          {
            "in": "path",
            "name": "clusterUuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "secretName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "Cluster is not yours"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Clusters"
        ]
      }
    },
    "/members": {
      "get": {
        "operationId": "GetMembers",
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  },
                  "type": "array"
                }
              }
            },
            "description": "the list of members and pending invites for your organization."
          },
          "403": {
            "description": "You do not have the required permissions to perform this operation."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Members"
        ]
      }
    },
    "/members/{email}": {
      "delete": {
        "operationId": "DeleteMember",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "403": {
            "description": "You do not have the required permissions to perform this operation."
          },
          "404": {
            "description": "specified user is not part of the organization"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Members"
        ]
      },
      "post": {
        "operationId": "UpdateMembers",
        "parameters": [
          {
            "in": "path",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMemberBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "400": {
            "description": "Invalid request body - e.g. invalid roles"
          },
          "403": {
            "description": "You do not have the required permissions to perform this operation or no open seats left"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "Members"
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://api.cloud.camunda.io"
    }
  ]
}
