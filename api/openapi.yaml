openapi: 3.0.0
info:
  contact: {}
  description: Manage Camunda Clusters and API Clients via API.
  license:
    name: ' '
    url: ""
  title: Camunda Management API
  version: 1.3.3
servers:
- url: https://api.cloud.camunda.io
paths:
  /clusters:
    get:
      operationId: GetClusters
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cluster'
                type: array
          description: A list of all your Camunda clusters.
      security:
      - bearer: []
    post:
      operationId: CreateCluster
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCluster_200_response'
          description: The clusterUuid of your new cluster.
        "400":
          description: "Name is too long, invalid clusterPlanType, invalid region,\
            \ no reservations left, invalid channel, or invalid generation"
      security:
      - bearer: []
  /clusters/parameters:
    get:
      description: Gets all possible options to create a Camunda cluster.
      operationId: GetParameters
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameters'
          description: Ok
      security:
      - bearer: []
  /clusters/{clusterUuid}:
    delete:
      description: Irreversibly deletes a cluster identified by the given clusterUuid.
      operationId: DeleteCluster
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "404":
          description: Cluster not found
      security:
      - bearer: []
    get:
      operationId: GetCluster
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
          description: Detailed information for the given clusterUuid.
        "404":
          description: Cluster not found
      security:
      - bearer: []
    patch:
      description: Updates name or labels of a cluster identified by the given clusterUuid.
      operationId: UpdateCluster
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCluster_request'
        required: true
      responses:
        "204":
          description: No content
        "404":
          description: Cluster not found
      security:
      - bearer: []
  /clusters/{clusterUuid}/backups:
    get:
      operationId: GetBackups
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BackupDto'
                type: array
          description: A list of all the backups created for your Camunda cluster.
        "403":
          description: Cluster is not yours
        "404":
          description: Cluster not found
      security:
      - bearer: []
    post:
      description: Creates a new backup
      operationId: CreateBackup
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDto'
          description: Ok
        "404":
          description: Cluster not found
      security:
      - bearer: []
  /clusters/{clusterUuid}/backups/{backupId}:
    delete:
      description: Irreversibly deletes a cluster
      operationId: DeleteBackup
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: backupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupDto'
          description: Ok
        "403":
          description: Cluster is not yours
      security:
      - bearer: []
  /clusters/{clusterUuid}/clients:
    get:
      operationId: GetClients
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClusterClient'
                type: array
          description: A list of all the clients currently configured for your Camunda
            cluster.
        "403":
          description: Cluster is not yours
        "404":
          description: Cluster not found
      security:
      - bearer: []
    post:
      operationId: CreateClient
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClusterClientBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedClusterClient'
          description: Ok
        "400":
          description: Client names must be unique
        "403":
          description: Maximum number of clients reached or cluster is not yours
        "404":
          description: Cluster not found
      security:
      - bearer: []
  /clusters/{clusterUuid}/clients/{clientId}:
    delete:
      description: Irreversibly deletes a cluster client.
      operationId: DeleteClient
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "403":
          description: Cluster is not yours
        "404":
          description: Cluster or client not found
      security:
      - bearer: []
    get:
      operationId: GetClient
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterClientConnectionDetails'
          description: The connection parameters needed to use the client with your
            Camunda cluster.
        "403":
          description: Cluster is not yours
        "404":
          description: Cluster or client not found
        "412":
          description: The cluster is not ready; try again later
      security:
      - bearer: []
  /clusters/{clusterUuid}/ipallowlist:
    put:
      description: Updates the IP Allowlist rules for your cluster. Each entry in
        the array must be a valid comma separated list of CIDRs.
      operationId: UpdateIpAllowlist
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpAllowListBody'
        required: true
      responses:
        "204":
          description: No content
      security:
      - bearer: []
  /clusters/{clusterUuid}/ipwhitelist:
    put:
      deprecated: true
      description: |-
        Updates the IP Whitelist rules for your cluster. Each entry in the array must be a valid comma separated list of CIDRs.
        THIS IS DEPRECATED AND WILL BE REMOVED FROM THE API IN JUNE 2025. USE /clusters/:clusterUuid/ipallowlist INSTEAD.
      operationId: UpdateIpWhitelist
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpWhiteListBody'
        required: true
      responses:
        "204":
          description: No content
      security:
      - bearer: []
  /clusters/{clusterUuid}/secrets:
    get:
      operationId: GetSecrets
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterSecrets'
          description: A list of all the secrets currently configured for your Camunda
            cluster.
        "403":
          description: Cluster is not yours
        "404":
          description: Cluster not found
      security:
      - bearer: []
    post:
      description: Creates a new secret
      operationId: CreateSecret
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretBody'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Secret name must be less than 50 characters
        "403":
          description: Maximum number of secret reached or cluster is not yours
        "404":
          description: Cluster not found
        "409":
          description: Secret names must be unique
      security:
      - bearer: []
  /clusters/{clusterUuid}/secrets/{secretName}:
    delete:
      description: Irreversibly deletes a secret
      operationId: DeleteSecret
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: secretName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "403":
          description: Cluster is not yours
      security:
      - bearer: []
  /clusters/{clusterUuid}/wake:
    put:
      description: Resumes a 'Suspended' Cluster.
      operationId: Wake
      parameters:
      - explode: false
        in: path
        name: clusterUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
      security:
      - bearer: []
  /members:
    get:
      operationId: GetMembers
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Member'
                type: array
          description: the list of members and pending invites for your organization.
        "403":
          description: You do not have the required permissions to perform this operation.
      security:
      - bearer: []
  /members/{email}:
    delete:
      operationId: DeleteMember
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No content
        "403":
          description: You do not have the required permissions to perform this operation.
        "404":
          description: specified user is not part of the organization
      security:
      - bearer: []
    post:
      operationId: UpdateMembers
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMemberBody'
        required: true
      responses:
        "204":
          description: No content
        "400":
          description: Invalid request body - e.g. invalid roles
        "403":
          description: You do not have the required permissions to perform this operation
            or no open seats left
      security:
      - bearer: []
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    AssignableOrganizationRoleType:
      anyOf:
      - $ref: '#/components/schemas/OrganizationRole.ADMIN'
      - $ref: '#/components/schemas/OrganizationRole.OPERATIONS_ENGINEER'
      - $ref: '#/components/schemas/OrganizationRole.TASK_USER'
      - $ref: '#/components/schemas/OrganizationRole.ANALYST'
      - $ref: '#/components/schemas/OrganizationRole.DEVELOPER'
      - $ref: '#/components/schemas/OrganizationRole.VISITOR'
      - $ref: '#/components/schemas/OrganizationRole.MODELER'
    BackupDto:
      additionalProperties: false
      example:
        operateStatus: null
        created: created
        tasklistStatus: null
        name: name
        optimizeStatus: null
        completed: completed
        uuid: uuid
        zeebeStatus: null
        status: null
      properties:
        completed:
          type: string
        created:
          type: string
        name:
          type: string
        operateStatus:
          $ref: '#/components/schemas/BackupStatus'
        optimizeStatus:
          $ref: '#/components/schemas/BackupStatus'
        status:
          $ref: '#/components/schemas/BackupStatus'
        tasklistStatus:
          $ref: '#/components/schemas/BackupStatus'
        uuid:
          type: string
        zeebeStatus:
          $ref: '#/components/schemas/BackupStatus'
      required:
      - completed
      - created
      - name
      - operateStatus
      - optimizeStatus
      - status
      - tasklistStatus
      - uuid
      - zeebeStatus
      type: object
    BackupStatus:
      enum:
      - In progress
      - Failed
      - Complete
      - "-"
      type: string
    CamundaClusterStage:
      enum:
      - dev
      - test
      - stage
      - prod
      nullable: false
      type: string
    Cluster:
      additionalProperties: false
      description: "Describing a Camunda cluster running in your organization. For\
        \ reference, use the UUID."
      example:
        generation:
          name: name
          uuid: uuid
        autoUpdate: true
        planType:
          name: name
          uuid: uuid
        created: 2000-01-23T04:56:07.000+00:00
        ipallowlist:
        - ip: ip
          description: description
        - ip: ip
          description: description
        channel:
          name: name
          uuid: uuid
        backupRegion:
          name: name
          uuid: uuid
        ownerId: ownerId
        uuid: uuid
        labels:
        - labels
        - labels
        name: name
        links:
          console: console
          connectors: connectors
          operate: operate
          optimize: optimize
          identity: identity
          tasklist: tasklist
          zeebe: zeebe
          oauth: oauth
        ipwhitelist:
        - ip: ip
          description: description
        - ip: ip
          description: description
        region:
          name: name
          uuid: uuid
        status:
          operateStatus: null
          ready: null
          identityStatus: "{}"
          tasklistStatus: null
          optimizeStatus: null
          zeebeStatus: null
      properties:
        autoUpdate:
          description: |-
            The cluster will automatically be updated by Camunda when a new C8 version is released
            If the cluster you want to create is running on a non-stable Channel passing this property will be ignored!
          type: boolean
        backupRegion:
          $ref: '#/components/schemas/Cluster_backupRegion'
        channel:
          $ref: '#/components/schemas/Cluster_channel'
        created:
          format: date-time
          type: string
        generation:
          $ref: '#/components/schemas/Cluster_generation'
        ipallowlist:
          description: the IP Allowlist rules for your cluster - will only be returned
            if your organization has the feature enabled and the client you are using
            has the permission to see it.
          items:
            $ref: '#/components/schemas/Cluster_ipallowlist_inner'
          type: array
        ipwhitelist:
          description: |-
            DEPRECATED: this field is going to be removed in June 2025, please use ipallowlist instead

            the IP Whitelist rules for your cluster - will only be returned if your organization has the feature enabled and the client you are using has the permission to see it.
          items:
            $ref: '#/components/schemas/Cluster_ipallowlist_inner'
          type: array
        labels:
          items:
            type: string
          type: array
        links:
          $ref: '#/components/schemas/Cluster_links'
        name:
          type: string
        ownerId:
          type: string
        planType:
          $ref: '#/components/schemas/Cluster_planType'
        region:
          $ref: '#/components/schemas/Cluster_region'
        status:
          $ref: '#/components/schemas/Cluster_status'
        uuid:
          description: The ID used in all further API operations referencing your
            cluster.
          type: string
      required:
      - autoUpdate
      - channel
      - created
      - generation
      - links
      - name
      - ownerId
      - planType
      - region
      - status
      - uuid
      type: object
    ClusterClient:
      additionalProperties: false
      example:
        clientId: clientId
        permissions:
        - Zeebe
        - Zeebe
        name: name
      properties:
        clientId:
          type: string
        name:
          type: string
        permissions:
          items:
            enum:
            - Zeebe
            - Operate
            - Tasklist
            - Optimize
            - Secrets
            type: string
          type: array
      required:
      - clientId
      - name
      - permissions
      type: object
    ClusterClientConnectionDetails:
      additionalProperties: false
      example:
        name: name
        ZEEBE_CLIENT_ID: ZEEBE_CLIENT_ID
        ZEEBE_ADDRESS: ZEEBE_ADDRESS
        ZEEBE_AUTHORIZATION_SERVER_URL: ZEEBE_AUTHORIZATION_SERVER_URL
      properties:
        ZEEBE_ADDRESS:
          type: string
        ZEEBE_AUTHORIZATION_SERVER_URL:
          type: string
        ZEEBE_CLIENT_ID:
          type: string
        name:
          type: string
      required:
      - ZEEBE_ADDRESS
      - ZEEBE_AUTHORIZATION_SERVER_URL
      - ZEEBE_CLIENT_ID
      - name
      type: object
    ClusterEncryptionKey:
      enum:
      - Software
      - Hardware
      - Provider
      type: string
    ClusterSecrets:
      additionalProperties:
        type: string
      properties: {}
      type: object
    ClusterComponentStatus:
      enum:
      - Creating
      - Healthy
      - Unhealthy
      - Updating
      - Resuming
      - Suspended
      type: string
    CreateClusterBody:
      additionalProperties: false
      description: Used to create a cluster through this API. All necessary values
        can be retrieved from the <pre>/clusters/parameters</pre> endpoint.
      example:
        generationId: generationId
        autoUpdate: true
        encryption: null
        regionId: regionId
        hardwarePackages: 0.8008281904610115
        name: name
        planTypeId: planTypeId
        backupRegionId: backupRegionId
        channelId: channelId
        stageLabel: null
      properties:
        autoUpdate:
          description: "If set to false, no automatic updates will be performed on\
            \ your cluster."
          type: boolean
        backupRegionId:
          description: The backup region to choose. Only available if the Sales Plan
            supports this. (Enterprise)
          type: string
        channelId:
          description: The channel (software spec) to use.
          type: string
        encryption:
          $ref: '#/components/schemas/ClusterEncryptionKey'
        generationId:
          description: The generation (software version) to use.
          type: string
        hardwarePackages:
          description: "Optional number uf hardware packages, defaults to 1. Only\
            \ availabe on request and for Advanced offering cluster types."
          format: double
          type: number
        name:
          description: The name of your new cluster.
          type: string
        planTypeId:
          description: The planType (hardware spec) to use.
          type: string
        regionId:
          description: The data center to use.
          type: string
        stageLabel:
          $ref: '#/components/schemas/CamundaClusterStage'
      required:
      - channelId
      - generationId
      - name
      - planTypeId
      - regionId
      type: object
    CreateClusterClientBody:
      additionalProperties: false
      description: "if no permissions are passed, the client will be created with\
        \ all the permissions available at the time of creation"
      example:
        clientName: clientName
        permissions:
        - Zeebe
        - Zeebe
      properties:
        clientName:
          type: string
        permissions:
          items:
            enum:
            - Zeebe
            - Operate
            - Tasklist
            - Optimize
            - Secrets
            type: string
          type: array
      required:
      - clientName
      type: object
    CreateSecretBody:
      additionalProperties: false
      example:
        secretName: secretName
        secretValue: secretValue
      properties:
        secretName:
          type: string
        secretValue:
          type: string
      required:
      - secretName
      - secretValue
      type: object
    CreatedClusterClient:
      additionalProperties: false
      example:
        clientId: clientId
        permissions:
        - permissions
        - permissions
        name: name
        clientSecret: clientSecret
        links:
          console: console
          connectors: connectors
          operate: operate
          optimize: optimize
          tasklist: tasklist
          zeebe: zeebe
          oauth: oauth
        uuid: uuid
      properties:
        clientId:
          type: string
        clientSecret:
          type: string
        links:
          $ref: '#/components/schemas/CreatedClusterClient_links'
        name:
          type: string
        permissions:
          items:
            type: string
          type: array
        uuid:
          type: string
      required:
      - clientId
      - clientSecret
      - name
      - permissions
      - uuid
      type: object
    IpAllowListBody:
      additionalProperties: false
      example:
        ipallowlist:
        - ip: ip
          description: description
        - ip: ip
          description: description
      properties:
        ipallowlist:
          items:
            $ref: '#/components/schemas/Cluster_ipallowlist_inner'
          type: array
      required:
      - ipallowlist
      type: object
    IpWhiteListBody:
      additionalProperties: false
      example:
        ipwhitelist:
        - ip: ip
          description: description
        - ip: ip
          description: description
      properties:
        ipwhitelist:
          items:
            $ref: '#/components/schemas/Cluster_ipallowlist_inner'
          type: array
      required:
      - ipwhitelist
      type: object
    Member:
      additionalProperties: false
      example:
        invitePending: true
        roles:
        - null
        - null
        name: name
        email: email
      properties:
        email:
          type: string
        invitePending:
          type: boolean
        name:
          type: string
        roles:
          items:
            $ref: '#/components/schemas/OrganizationRole'
          type: array
      required:
      - email
      - invitePending
      - name
      - roles
      type: object
    OrganizationRole:
      enum:
      - member
      - admin
      - organizationadmin
      - organizationowner
      - owner
      - supportagent
      - operationsengineer
      - taskuser
      - analyst
      - developer
      - visitor
      - modeler
      type: string
    OrganizationRole.ADMIN:
      enum:
      - admin
      type: string
    OrganizationRole.ANALYST:
      enum:
      - analyst
      type: string
    OrganizationRole.DEVELOPER:
      enum:
      - developer
      type: string
    OrganizationRole.MODELER:
      enum:
      - modeler
      type: string
    OrganizationRole.OPERATIONS_ENGINEER:
      enum:
      - operationsengineer
      type: string
    OrganizationRole.TASK_USER:
      enum:
      - taskuser
      type: string
    OrganizationRole.VISITOR:
      enum:
      - visitor
      type: string
    Parameters:
      additionalProperties: false
      description: Describes the different options to create a Camunda cluster.
      example:
        regions:
        - provider: provider
          name: name
          uuid: uuid
          backups:
          - regions:
            - id: id
              label: label
            - id: id
              label: label
            uuid: uuid
          - regions:
            - id: id
              label: label
            - id: id
              label: label
            uuid: uuid
        - provider: provider
          name: name
          uuid: uuid
          backups:
          - regions:
            - id: id
              label: label
            - id: id
              label: label
            uuid: uuid
          - regions:
            - id: id
              label: label
            - id: id
              label: label
            uuid: uuid
        channels:
        - allowedGenerations:
          - name: name
            uuid: uuid
          - name: name
            uuid: uuid
          defaultGeneration:
            name: name
            uuid: uuid
          name: name
          uuid: uuid
        - allowedGenerations:
          - name: name
            uuid: uuid
          - name: name
            uuid: uuid
          defaultGeneration:
            name: name
            uuid: uuid
          name: name
          uuid: uuid
        clusterPlanTypes:
        - name: name
          uuid: uuid
        - name: name
          uuid: uuid
      properties:
        channels:
          items:
            $ref: '#/components/schemas/Parameters_channels_inner'
          type: array
        clusterPlanTypes:
          items:
            $ref: '#/components/schemas/Parameters_channels_inner_allowedGenerations_inner'
          type: array
        regions:
          items:
            $ref: '#/components/schemas/Parameters_regions_inner'
          type: array
      required:
      - channels
      - clusterPlanTypes
      - regions
      type: object
    PostMemberBody:
      additionalProperties: false
      example:
        orgRoles:
        - null
        - null
      properties:
        orgRoles:
          items:
            $ref: '#/components/schemas/AssignableOrganizationRoleType'
          type: array
      required:
      - orgRoles
      type: object
    CreateCluster_200_response:
      example:
        clusterId: clusterId
      properties:
        clusterId:
          type: string
      required:
      - clusterId
      type: object
    UpdateCluster_request:
      properties:
        name:
          type: string
        numberOfAllocatedHwPackages:
          format: double
          type: number
        stageLabel:
          $ref: '#/components/schemas/CamundaClusterStage'
      type: object
    Cluster_backupRegion:
      description: The data center where your backups are stored. Only available if
        the Sales Plan supports this. (Enterprise)
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Cluster_channel:
      description: The software channel your cluster is running on.
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Cluster_generation:
      description: The version of Camunda running on your cluster.
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Cluster_ipallowlist_inner:
      example:
        ip: ip
        description: description
      properties:
        description:
          type: string
        ip:
          type: string
      required:
      - description
      - ip
      type: object
    Cluster_links:
      description: Endpoints for the components running in your Camunda cluster.
      example:
        console: console
        connectors: connectors
        operate: operate
        optimize: optimize
        identity: identity
        tasklist: tasklist
        zeebe: zeebe
        oauth: oauth
      properties:
        connectors:
          type: string
        console:
          type: string
        identity:
          type: string
        oauth:
          type: string
        operate:
          type: string
        optimize:
          type: string
        tasklist:
          type: string
        zeebe:
          type: string
      type: object
    Cluster_planType:
      description: "Also called `ClusterPlanType`, this describes the hardware used\
        \ to run your Camunda cluster."
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Cluster_region:
      description: The data center where your Camunda cluster is running.
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Cluster_status:
      description: A health indicator for your Camunda cluster. Each of the components
        have their own state. The combined state is in the field `ready`.
      example:
        operateStatus: null
        ready: null
        identityStatus: "{}"
        tasklistStatus: null
        optimizeStatus: null
        zeebeStatus: null
      properties:
        identityStatus:
          $ref: '#/components/schemas/ClusterStatus'
        operateStatus:
          $ref: '#/components/schemas/ClusterComponentStatus'
        optimizeStatus:
          $ref: '#/components/schemas/ClusterComponentStatus'
        ready:
          $ref: '#/components/schemas/ClusterComponentStatus'
        tasklistStatus:
          $ref: '#/components/schemas/ClusterComponentStatus'
        zeebeStatus:
          $ref: '#/components/schemas/ClusterComponentStatus'
      required:
      - ready
      type: object
    CreatedClusterClient_links:
      example:
        console: console
        connectors: connectors
        operate: operate
        optimize: optimize
        tasklist: tasklist
        zeebe: zeebe
        oauth: oauth
      properties:
        connectors:
          type: string
        console:
          type: string
        oauth:
          type: string
        operate:
          type: string
        optimize:
          type: string
        tasklist:
          type: string
        zeebe:
          type: string
      type: object
    Parameters_channels_inner_allowedGenerations_inner:
      example:
        name: name
        uuid: uuid
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
      - name
      - uuid
      type: object
    Parameters_channels_inner:
      example:
        allowedGenerations:
        - name: name
          uuid: uuid
        - name: name
          uuid: uuid
        defaultGeneration:
          name: name
          uuid: uuid
        name: name
        uuid: uuid
      properties:
        allowedGenerations:
          items:
            $ref: '#/components/schemas/Parameters_channels_inner_allowedGenerations_inner'
          type: array
        defaultGeneration:
          $ref: '#/components/schemas/Parameters_channels_inner_allowedGenerations_inner'
        name:
          type: string
        uuid:
          type: string
      required:
      - allowedGenerations
      - defaultGeneration
      - name
      - uuid
      type: object
    Parameters_regions_inner_backups_inner_regions_inner:
      example:
        id: id
        label: label
      properties:
        id:
          type: string
        label:
          type: string
      required:
      - id
      - label
      type: object
    Parameters_regions_inner_backups_inner:
      example:
        regions:
        - id: id
          label: label
        - id: id
          label: label
        uuid: uuid
      properties:
        regions:
          items:
            $ref: '#/components/schemas/Parameters_regions_inner_backups_inner_regions_inner'
          type: array
        uuid:
          type: string
      required:
      - regions
      - uuid
      type: object
    Parameters_regions_inner:
      example:
        provider: provider
        name: name
        uuid: uuid
        backups:
        - regions:
          - id: id
            label: label
          - id: id
            label: label
          uuid: uuid
        - regions:
          - id: id
            label: label
          - id: id
            label: label
          uuid: uuid
      properties:
        backups:
          items:
            $ref: '#/components/schemas/Parameters_regions_inner_backups_inner'
          type: array
        name:
          type: string
        provider:
          type: string
        uuid:
          type: string
      required:
      - name
      - provider
      - uuid
      type: object
  securitySchemes:
    bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
