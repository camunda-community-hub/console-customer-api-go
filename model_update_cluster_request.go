/*
Camunda Management API

Manage Camunda Clusters and API Clients via API.

API version: 1.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateClusterRequest{}

// UpdateClusterRequest struct for UpdateClusterRequest
type UpdateClusterRequest struct {
	Name                        *string              `json:"name,omitempty"`
	NumberOfAllocatedHwPackages *float64             `json:"numberOfAllocatedHwPackages,omitempty"`
	StageLabel                  *CamundaClusterStage `json:"stageLabel,omitempty"`
}

// NewUpdateClusterRequest instantiates a new UpdateClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClusterRequest() *UpdateClusterRequest {
	this := UpdateClusterRequest{}
	return &this
}

// NewUpdateClusterRequestWithDefaults instantiates a new UpdateClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClusterRequestWithDefaults() *UpdateClusterRequest {
	this := UpdateClusterRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateClusterRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateClusterRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateClusterRequest) SetName(v string) {
	o.Name = &v
}

// GetNumberOfAllocatedHwPackages returns the NumberOfAllocatedHwPackages field value if set, zero value otherwise.
func (o *UpdateClusterRequest) GetNumberOfAllocatedHwPackages() float64 {
	if o == nil || IsNil(o.NumberOfAllocatedHwPackages) {
		var ret float64
		return ret
	}
	return *o.NumberOfAllocatedHwPackages
}

// GetNumberOfAllocatedHwPackagesOk returns a tuple with the NumberOfAllocatedHwPackages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterRequest) GetNumberOfAllocatedHwPackagesOk() (*float64, bool) {
	if o == nil || IsNil(o.NumberOfAllocatedHwPackages) {
		return nil, false
	}
	return o.NumberOfAllocatedHwPackages, true
}

// HasNumberOfAllocatedHwPackages returns a boolean if a field has been set.
func (o *UpdateClusterRequest) HasNumberOfAllocatedHwPackages() bool {
	if o != nil && !IsNil(o.NumberOfAllocatedHwPackages) {
		return true
	}

	return false
}

// SetNumberOfAllocatedHwPackages gets a reference to the given float64 and assigns it to the NumberOfAllocatedHwPackages field.
func (o *UpdateClusterRequest) SetNumberOfAllocatedHwPackages(v float64) {
	o.NumberOfAllocatedHwPackages = &v
}

// GetStageLabel returns the StageLabel field value if set, zero value otherwise.
func (o *UpdateClusterRequest) GetStageLabel() CamundaClusterStage {
	if o == nil || IsNil(o.StageLabel) {
		var ret CamundaClusterStage
		return ret
	}
	return *o.StageLabel
}

// GetStageLabelOk returns a tuple with the StageLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClusterRequest) GetStageLabelOk() (*CamundaClusterStage, bool) {
	if o == nil || IsNil(o.StageLabel) {
		return nil, false
	}
	return o.StageLabel, true
}

// HasStageLabel returns a boolean if a field has been set.
func (o *UpdateClusterRequest) HasStageLabel() bool {
	if o != nil && !IsNil(o.StageLabel) {
		return true
	}

	return false
}

// SetStageLabel gets a reference to the given CamundaClusterStage and assigns it to the StageLabel field.
func (o *UpdateClusterRequest) SetStageLabel(v CamundaClusterStage) {
	o.StageLabel = &v
}

func (o UpdateClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NumberOfAllocatedHwPackages) {
		toSerialize["numberOfAllocatedHwPackages"] = o.NumberOfAllocatedHwPackages
	}
	if !IsNil(o.StageLabel) {
		toSerialize["stageLabel"] = o.StageLabel
	}
	return toSerialize, nil
}

type NullableUpdateClusterRequest struct {
	value *UpdateClusterRequest
	isSet bool
}

func (v NullableUpdateClusterRequest) Get() *UpdateClusterRequest {
	return v.value
}

func (v *NullableUpdateClusterRequest) Set(val *UpdateClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClusterRequest(val *UpdateClusterRequest) *NullableUpdateClusterRequest {
	return &NullableUpdateClusterRequest{value: val, isSet: true}
}

func (v NullableUpdateClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
