/*
Camunda Management API

Manage Camunda Clusters and API Clients via API.

API version: 1.3.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CreateCluster200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCluster200Response{}

// CreateCluster200Response struct for CreateCluster200Response
type CreateCluster200Response struct {
	ClusterId string `json:"clusterId"`
}

// NewCreateCluster200Response instantiates a new CreateCluster200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCluster200Response(clusterId string) *CreateCluster200Response {
	this := CreateCluster200Response{}
	this.ClusterId = clusterId
	return &this
}

// NewCreateCluster200ResponseWithDefaults instantiates a new CreateCluster200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCluster200ResponseWithDefaults() *CreateCluster200Response {
	this := CreateCluster200Response{}
	return &this
}

// GetClusterId returns the ClusterId field value
func (o *CreateCluster200Response) GetClusterId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value
// and a boolean to check if the value has been set.
func (o *CreateCluster200Response) GetClusterIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClusterId, true
}

// SetClusterId sets field value
func (o *CreateCluster200Response) SetClusterId(v string) {
	o.ClusterId = v
}

func (o CreateCluster200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCluster200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clusterId"] = o.ClusterId
	return toSerialize, nil
}

type NullableCreateCluster200Response struct {
	value *CreateCluster200Response
	isSet bool
}

func (v NullableCreateCluster200Response) Get() *CreateCluster200Response {
	return v.value
}

func (v *NullableCreateCluster200Response) Set(val *CreateCluster200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCluster200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCluster200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCluster200Response(val *CreateCluster200Response) *NullableCreateCluster200Response {
	return &NullableCreateCluster200Response{value: val, isSet: true}
}

func (v NullableCreateCluster200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCluster200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


